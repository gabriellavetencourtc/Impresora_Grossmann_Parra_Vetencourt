/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto.pkg2;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

/**
 * Clase principal para el proyecto.
 * Esta clase representa la ventana principal de la interfaz gráfica de usuario de la aplicación.
 * Permite a los usuarios realizar diversas operaciones, como agregar usuarios, crear documentos,
 * cargar información de usuarios desde un archivo CSV, imprimir documentos y gestionar la cola de impresión.
 * La clase incluye métodos para manejar las interacciones del usuario y gestionar las estructuras de datos internas.
 *
 * @author daniela
 */
public class main extends javax.swing.JFrame {

    JFileChooser seleccionar = new JFileChooser();
    File archivo;
    private String tipo;
    private String nombreUsuario;

    private Lista<Usuario> listaUsuarios;
    private Lista<Documento> ldoc;
    private MonticuloB mb;



    /**
     * Creates new form Principal
     */
     /**
     * Crea una nueva instancia de la clase principal.
     * Inicializa los componentes de la interfaz gráfica y configura las estructuras de datos internas.
     */
    public main() {
        initComponents();
        this.setResizable(false);
        this.setTitle("PRINCIPAL");
        this.archivo = null;
        this.listaUsuarios = new Lista();
        this.ldoc = new Lista();
        this.mb = new MonticuloB();
    }

     /**
     * Abre un archivo CSV y lee la información del usuario para llenar la lista de usuarios.
     * Ignora la primera línea, ya que se considera el encabezado.
     */
    public void AbrirCSV() {
        if (seleccionar.showDialog(this, "Abrir Archivo") == JFileChooser.APPROVE_OPTION) {
            archivo = seleccionar.getSelectedFile();
            if (archivo.canRead() && archivo.getName().endsWith("csv")) {
                try ( BufferedReader bf = new BufferedReader(new FileReader(seleccionar.getSelectedFile().toString()))) {
                    String bfRead;
                     boolean primeraLinea = true;

                    while ((bfRead = bf.readLine()) != null) {
                        String aux;
                        aux = bfRead.trim();
                        
                        if (primeraLinea) {
                        primeraLinea = false;
                        continue;
                    }
                        String[] aux1 = aux.split(";");

                        if (aux1.length == 2) {
                            nombreUsuario = aux1[0].trim();
                            tipo = aux1[1].trim();
                            if(!nombreUsuario.equalsIgnoreCase("usuario")){
                                Usuario usuario = new Usuario(nombreUsuario, tipo);
                                listaUsuarios.InsertarFinal(usuario);
                            }
                        }
                    }
                    TAusuariosDoc.setText(listaUsuarios.TextAreaUD(new Lista()));                   
                } catch (Exception e) {
                    System.out.println(e);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Por favor seleccione un archivo CSV");
            }
        }
    }

    /**
     * Obtiene la lista de usuarios.
     *
     * @return La lista de usuarios.
     */
    public Lista<Usuario> getListaUsuarios() {
        return listaUsuarios;
    }

      /**
     * Establece la lista de usuarios.
     *
     * @param listaUsuarios La nueva lista de usuarios.
     */
    public void setListaUsuarios(Lista<Usuario> listaUsuarios) {
        this.listaUsuarios = listaUsuarios;
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jFrame3 = new javax.swing.JFrame();
        jFrame4 = new javax.swing.JFrame();
        aggUsuario = new javax.swing.JButton();
        cargar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        Doc = new javax.swing.JButton();
        imprimir = new javax.swing.JButton();
        eliminarDoc = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TAusuariosDoc = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        TAcola = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        liberarPrinter = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        borrarCola = new javax.swing.JButton();
        Arbol = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame3Layout = new javax.swing.GroupLayout(jFrame3.getContentPane());
        jFrame3.getContentPane().setLayout(jFrame3Layout);
        jFrame3Layout.setHorizontalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame3Layout.setVerticalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame4Layout = new javax.swing.GroupLayout(jFrame4.getContentPane());
        jFrame4.getContentPane().setLayout(jFrame4Layout);
        jFrame4Layout.setHorizontalGroup(
            jFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame4Layout.setVerticalGroup(
            jFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        aggUsuario.setText("Agregar Usuario");
        aggUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aggUsuarioActionPerformed(evt);
            }
        });
        getContentPane().add(aggUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 77, 146, -1));

        cargar.setText("Cargar Archivo");
        cargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarActionPerformed(evt);
            }
        });
        getContentPane().add(cargar, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 36, 146, -1));

        eliminar.setText("Eliminar Usuario");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });
        getContentPane().add(eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 118, 146, -1));

        Doc.setText("Crear Documento");
        Doc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DocActionPerformed(evt);
            }
        });
        getContentPane().add(Doc, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 159, 146, -1));

        imprimir.setText("Imprimir");
        imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirActionPerformed(evt);
            }
        });
        getContentPane().add(imprimir, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 241, 146, -1));

        eliminarDoc.setText("Eliminar Documento");
        eliminarDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarDocActionPerformed(evt);
            }
        });
        getContentPane().add(eliminarDoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 200, -1, -1));

        TAusuariosDoc.setEditable(false);
        TAusuariosDoc.setColumns(20);
        TAusuariosDoc.setRows(5);
        TAusuariosDoc.setFocusable(false);
        jScrollPane1.setViewportView(TAusuariosDoc);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 36, 273, 310));

        TAcola.setEditable(false);
        TAcola.setColumns(20);
        TAcola.setRows(5);
        TAcola.setFocusable(false);
        jScrollPane2.setViewportView(TAcola);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(532, 36, 292, 310));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setText("Usuarios y Documentos");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel2.setText("Cola de Impresión");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 10, -1, -1));

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel3.setText("Árbol de Impresión");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 420, -1, 20));

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel5.setText("Liberar impresora");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 360, -1, 20));

        liberarPrinter.setText("Aceptar");
        liberarPrinter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                liberarPrinterActionPerformed(evt);
            }
        });
        getContentPane().add(liberarPrinter, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 360, -1, 20));

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel6.setText("Eliminar Documento de la cola");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 390, -1, 20));

        borrarCola.setText("Aceptar");
        borrarCola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarColaActionPerformed(evt);
            }
        });
        getContentPane().add(borrarCola, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 390, -1, 20));

        Arbol.setText("Ver");
        Arbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArbolActionPerformed(evt);
            }
        });
        getContentPane().add(Arbol, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 420, 75, 20));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto/pkg2/Imagenes/doc2.png"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 340, 80, 110));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto/pkg2/Imagenes/Pasted Graphic 8.png"))); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 200, 180));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto/pkg2/Imagenes/doc2.png"))); // NOI18N
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 370, 100, 80));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto/pkg2/Imagenes/Pasted Graphic 9.png"))); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 360, 130, 90));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto/pkg2/Imagenes/fondoazul.jpeg"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 890, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * Abre un cuadro de diálogo para seleccionar y cargar un archivo CSV,
    * luego lee la información del archivo y actualiza la lista de usuarios.
    */
    private void cargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarActionPerformed
        // TODO add your handling code here:
        AbrirCSV();
    }//GEN-LAST:event_cargarActionPerformed
    
    /**
    * Abre una nueva ventana para permitir al usuario agregar un nuevo usuario.
    * Actualiza la lista de usuarios y el área de texto correspondiente.
    */
    private void aggUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aggUsuarioActionPerformed
        // TODO add your handling code here:
        new AggUsuario(listaUsuarios,TAusuariosDoc, ldoc).setVisible(true);
    }//GEN-LAST:event_aggUsuarioActionPerformed

    /**
    * Abre una nueva ventana para permitir al usuario crear un nuevo documento.
    * Actualiza la lista de usuarios y el área de texto correspondiente.
    */
    private void DocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DocActionPerformed
        // TODO add your handling code here:
        new CrearDoc(listaUsuarios, TAusuariosDoc, ldoc).setVisible(true);
    }//GEN-LAST:event_DocActionPerformed

    /**
    * Abre una nueva ventana para permitir al usuario eliminar un usuario existente.
    * Actualiza la lista de usuarios y el área de texto correspondiente.
    */
    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        // TODO add your handling code here:
        new EliminarUsuario(listaUsuarios, TAusuariosDoc, ldoc, mb).setVisible(true);
    }//GEN-LAST:event_eliminarActionPerformed

    /**
    * Abre una nueva ventana para permitir al usuario imprimir documentos en la cola.
    * Actualiza la lista de documentos y el área de texto correspondiente.
    */
    private void imprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirActionPerformed
        // TODO add your handling code here:
        new Imprimir(ldoc, mb, TAcola).setVisible(true);
    }//GEN-LAST:event_imprimirActionPerformed

    /**
    * Abre una nueva ventana para permitir al usuario eliminar un documento de la cola.
    * Actualiza la lista de documentos y el área de texto correspondiente.
    */
    private void eliminarDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarDocActionPerformed
        // TODO add your handling code here:
        new EliminarDocumento(ldoc, mb, TAusuariosDoc,listaUsuarios).setVisible(true);
    }//GEN-LAST:event_eliminarDocActionPerformed

    /**
    * Libera el primer documento de la cola de impresión.
    * Actualiza la cola de impresión y muestra un mensaje de éxito.
    */
    private void liberarPrinterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_liberarPrinterActionPerformed
        // TODO add your handling code here:
  
        if(TAcola.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "No hay documentos en la cola!");
        }else{
            mb.eliminarMin();
            JOptionPane.showMessageDialog(this, "Eliminado con éxito");
            TAcola.setText(mb.MostrarCola());
        }
    }//GEN-LAST:event_liberarPrinterActionPerformed

    /**
    * Abre una nueva ventana para permitir al usuario eliminar documentos de la cola.
    * Actualiza la lista de documentos y el área de texto correspondiente.
    */
    private void borrarColaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarColaActionPerformed
        // TODO add your handling code here:
        new EliminarDocCola(ldoc, mb, TAcola,listaUsuarios).setVisible(true);
    }//GEN-LAST:event_borrarColaActionPerformed

    /**
    * Abre una nueva ventana para mostrar el árbol de impresión.
    * Utiliza la clase GraphicArbol para visualizar la estructura de datos.
    */
    private void ArbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArbolActionPerformed
        // TODO add your handling code here:
        GraphicArbol arbol = new GraphicArbol();
        arbol.setMonticulo(mb);
        
        JFrame ventana = new JFrame();
        
        ventana.getContentPane().add(arbol);
        ventana.setSize(800, 600);
        ventana.setVisible(true);

    }//GEN-LAST:event_ArbolActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Arbol;
    private javax.swing.JButton Doc;
    private javax.swing.JTextArea TAcola;
    private javax.swing.JTextArea TAusuariosDoc;
    private javax.swing.JButton aggUsuario;
    private javax.swing.JButton borrarCola;
    private javax.swing.JButton cargar;
    private javax.swing.JButton eliminar;
    private javax.swing.JButton eliminarDoc;
    private javax.swing.JButton imprimir;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JFrame jFrame3;
    private javax.swing.JFrame jFrame4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton liberarPrinter;
    // End of variables declaration//GEN-END:variables
}
