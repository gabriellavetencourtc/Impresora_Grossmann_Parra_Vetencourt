/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto.pkg2;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

/**
 *
 * @author gabriellavetencourt
 */
/**
 * Esta clase representa una interfaz gráfica para eliminar documentos.
 * Permite buscar y eliminar documentos asociados a un usuario.
 */
public class EliminarDocumento extends javax.swing.JFrame {

    private Lista<Documento> ldoc;
    private MonticuloB mb;
    private JTextArea textA;
    private Lista<Usuario> listaUsuarios;

    /**
     * Creates new form EliminarDocumento
     */
    /**
     * Constructor de la clase EliminarDocumento.
     *
     * @param ldoc           Lista de documentos disponibles
     * @param mb             Montículo binario para la cola de impresión
     * @param textA          Área de texto donde se muestra la información
     * @param listaUsuarios  Lista de usuarios asociados a los documentos
     */
    public EliminarDocumento(Lista<Documento> ldoc, MonticuloB mb, JTextArea textA,Lista<Usuario> listaUsuarios) {
        initComponents();
        this.ldoc = ldoc;
        this.mb = mb;
        this.textA = textA;
        this.listaUsuarios =listaUsuarios;

        this.setResizable(false);
        this.setTitle("ELIMINAR DOCUMENTO");
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nombreUs = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        docDisponibles = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        nombreDoc = new javax.swing.JTextField();
        eliminar = new javax.swing.JButton();
        volver = new javax.swing.JButton();
        buscar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel1.setText("Ingrese su usuario: ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        nombreUs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreUsActionPerformed(evt);
            }
        });
        getContentPane().add(nombreUs, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 30, 103, -1));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel2.setText("Documentos del usuario:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, -1, -1));

        docDisponibles.setEditable(false);
        docDisponibles.setColumns(20);
        docDisponibles.setRows(5);
        docDisponibles.setFocusable(false);
        jScrollPane1.setViewportView(docDisponibles);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, -1, 250));

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel3.setText("Ingrese el nombre del documento a eliminar:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, -1, -1));
        getContentPane().add(nombreDoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 380, 105, -1));

        eliminar.setText("Eliminar");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });
        getContentPane().add(eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(402, 379, -1, -1));

        volver.setText("Volver");
        volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverActionPerformed(evt);
            }
        });
        getContentPane().add(volver, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 433, -1, -1));

        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        getContentPane().add(buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 30, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto/pkg2/Imagenes/Pasted Graphic 7.png"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 160, 160, 180));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto/pkg2/Imagenes/Pasted Graphic 6.png"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 170, 180));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto/pkg2/Imagenes/fondoazul.jpeg"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, 480));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nombreUsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreUsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreUsActionPerformed
    /**
     * Método invocado al pulsar el botón "Volver", oculta la ventana actual.
     *
     * @param evt Evento de acción que desencadena el método
     */
    private void volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_volverActionPerformed

    /**
     * Método invocado al pulsar el botón "Buscar".
     * Busca documentos asociados a un usuario y los muestra en un área de texto.
     *
     * @param evt Evento de acción que desencadena el método
     */
    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        // TODO add your handling code here:
        if (!nombreUs.getText().isEmpty()) {
            Hashtable hs = ldoc.getHs();

            if (hs.contieneUsuario(nombreUs.getText())) {

                docDisponibles.setText(ldoc.ImprimirPorUsuario(nombreUs.getText()));
            } 
        } else {
            JOptionPane.showMessageDialog(this, "Error! El usuario ingresado no existe o no tiene documentos disponibles");
        }
    }//GEN-LAST:event_buscarActionPerformed
    /**
     * Método invocado al pulsar el botón "Eliminar".
     * Elimina un documento si existe en la lista de documentos.
     *
     * @param evt Evento de acción que desencadena el método
     */
    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        // TODO add your handling code here:
        //docDisponibles.getText().contains(nombreDoc.getText()) && 
        if (ldoc.buscarDocumento(nombreDoc.getText()) && (!mb.buscarPorNombre(nombreDoc.getText()))) {

            Usuario usAux = (Usuario) ldoc.getHs().getKey(nombreUs.getText());

            Lista<Documento> ldocAux = (Lista<Documento>) ldoc.getHs().get(usAux);
            Nodo pAux = ldocAux.getpFirst();

            while (pAux != null) {

                Documento doc = (Documento) pAux.getDato();
                if (doc.getNombre().equalsIgnoreCase(nombreDoc.getText())) {
                    
                   ldoc.EliminarDoc(nombreDoc.getText());
                   ldoc.getHs().removeDocument(nombreDoc.getText());
                   JOptionPane.showMessageDialog(this, "Documento eliminado con éxito!");
                   break;

                }
                pAux = pAux.getpNext();
            }
            textA.setText(listaUsuarios.TextAreaUD(ldoc));

        } else {
            JOptionPane.showMessageDialog(this, "El documento ingresado no existe o se encuentra en la cola de impresión");
        }
        
    }//GEN-LAST:event_eliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscar;
    private javax.swing.JTextArea docDisponibles;
    private javax.swing.JButton eliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nombreDoc;
    private javax.swing.JTextField nombreUs;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
